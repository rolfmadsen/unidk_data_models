name: Generate Mermaid Class Diagram

permissions:
  contents: write

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch: {}    # explicit empty object

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      BASEROW_TOKEN: ${{ secrets.BASEROW_TOKEN }}
      BASE_URL: https://api.baserow.io
      TABLE_ID: 495798

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Debug Baserow token
        run: |
          if [ -z "$BASEROW_TOKEN" ]; then
            echo "❌ BASEROW_TOKEN is empty!"
            exit 1
          else
            echo "✔️ BASEROW_TOKEN is set (length: ${#BASEROW_TOKEN})"
          fi

      - name: Fetch all classes from Baserow
        run: |
          echo "→ Fetching table $TABLE_ID…" >&2
          status=$(
            curl -s -o entities.json -w "%{http_code}" \
              -H "Authorization: Token $BASEROW_TOKEN" \
              "$BASE_URL/api/database/rows/table/$TABLE_ID/?user_field_names=true"
          )
          echo "← HTTP $status" >&2
          head -n 20 entities.json >&2
          [[ "$status" -eq 200 ]] || { echo "❌ Fetch failed"; exit 1; }

      - name: Build Mermaid diagram
        run: |
          # start Mermaid block
          echo '```mermaid' > diagram.md
          echo 'classDiagram'   >> diagram.md

          # emit each non‑empty Klasse
          jq -r '.results[]
                 | select(.Klasse != null and .Klasse != "")
                 | "  class \(.Klasse)"' entities.json \
            >> diagram.md

          # close fence
          echo '```'           >> diagram.md

      - name: List outputs
        run: ls -1

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: update Mermaid diagram"
          file_pattern: |
            diagram.md
